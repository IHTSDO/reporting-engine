<!--suppress MavenModelInspection -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.ihtsdo.snowowl</groupId>
		<artifactId>ihtsdo-snowowl-parent</artifactId>
		<version>4.8.0-SNAPSHOT</version>
	</parent>

	<artifactId>org.ihtsdo.snowowl.authoring.single.api.rest</artifactId>

	<properties>
		<org.ihtsdo.otf.im-version>0.0.3</org.ihtsdo.otf.im-version>
		<activemq.version>5.10.0</activemq.version>
		<emf.version>2.11.0-v20150123-0347</emf.version>
		<slf4j.version>1.7.2</slf4j.version>
		<!-- manifest properties -->
		<bundle.webcontext>/snowowl/ihtsdo-sca</bundle.webcontext>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<version>1.2.5.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.4.185</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.34</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-csv</artifactId>
			<version>1.2</version>
		</dependency>
		
		<dependency>
			<groupId>org.ihtsdo.snowowl</groupId>
			<artifactId>org.ihtsdo.snowowl.api.rest.common</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.ihtsdo.otf.common</groupId>
			<artifactId>otf-common</artifactId>
			<version>1.1.0</version>
		</dependency>
		<!-- SnowOwl -->
		<!-- Plug-in dependencies are repeated here so that the build can resolve
			them at compile time -->
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.commons</artifactId>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.commons.base</artifactId>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.snowowl.core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.snowowl.datastore.server</artifactId>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.snowowl.eventbus</artifactId>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.snowowl.snomed.model</artifactId>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.snowowl.snomed.api</artifactId>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.snowowl.api.impl</artifactId>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.snowowl.snomed.api.impl</artifactId>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.snowowl.datastore</artifactId>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.snowowl.snomed.datastore</artifactId>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.snowowl.snomed.datastore.server</artifactId>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.snowowl.api</artifactId>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>org.eclipse.emf.cdo</artifactId>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>org.eclipse.emf.cdo.common</artifactId>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.snowowl.snomed.scg</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		
		<!-- The Servlet specification is implemented by the web container -->
		<dependency>
			<groupId>org.eclipse.jetty.orbit</groupId>
			<artifactId>javax.servlet</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
			<scope>provided</scope>
		</dependency>

		<!-- Regular Maven dependencies -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>15.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>${xstream.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.hateoas</groupId>
			<artifactId>spring-hateoas</artifactId>
			<version>${spring.hateoas.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-client</artifactId>
			<version>${activemq.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-broker</artifactId>
			<version>${activemq.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-kahadb-store</artifactId>
			<version>${activemq.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>2.10.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-core</artifactId>
			<version>4.10.2</version>
		</dependency>
		<dependency>
			<groupId>net.rcarz</groupId>
			<artifactId>jira-client</artifactId>
			<version>0.6.1-IHTSDO</version>
		</dependency>
		<!-- IMS -->
		<dependency>
			<groupId>org.ihtsdo.otf</groupId>
			<artifactId>ihtsdo-crowd-resources</artifactId>
			<version>${org.ihtsdo.otf.im-version}</version>
			<classifier>resources</classifier>
			<type>zip</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.ihtsdo.otf</groupId>
			<artifactId>ihtsdo-crowd-bridge</artifactId>
			<version>${org.ihtsdo.otf.im-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.6</version>
		</dependency>
		<dependency>
			<groupId>com.google.gdata</groupId>
			<artifactId>core</artifactId>
			<version>1.47.1</version>
		</dependency>
	</dependencies>

	<build>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		
		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
			</resource>
			<resource>
				<directory>${project.build.directory}/generated-resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-packaging-plugin</artifactId>
				<executions>
					<execution>
						<id>generate-qualifier</id>
						<phase>validate</phase>
						<goals>
							<goal>build-qualifier</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<version>1.5.3</version>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>replace</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<file>${project.build.directory}/generated/MANIFEST.MF</file>
					<outputFile>${project.build.directory}/manifest/MANIFEST.MF</outputFile>
					<regex>true</regex>
					<token>Bundle-Version: .*\.qualifier</token>
					<value>Bundle-Version: ${unqualifiedVersion}.${buildQualifier}</value>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<outputDirectory>${project.build.directory}/plain-jar</outputDirectory>
				</configuration>
				<executions>
					<execution>
						<id>create-jar</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>

							<classesDirectory>${project.build.directory}/classes</classesDirectory>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<archive>
								<manifestFile>${project.build.directory}/manifest/MANIFEST.MF</manifestFile>
							</archive>

						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Generate Manifest -->
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.5.3</version>
				<dependencies>
					<dependency>
						<groupId>biz.aQute.bnd</groupId>
						<artifactId>bndlib</artifactId>
						<version>2.4.0</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>bundle-manifest</id>
						<phase>process-classes</phase>
						<goals>
							<goal>manifest</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<supportedProjectTypes>
						<supportedProjectType>jar</supportedProjectType>
					</supportedProjectTypes>
					<manifestLocation>${project.build.directory}/generated/</manifestLocation>

					<instructions>
						<Build-Name>IHTSDO Snow Owl REST Single Concept Authoring Service</Build-Name>
						<Bundle-SymbolicName>${project.artifactId};singleton:=true</Bundle-SymbolicName>
						<Bundle-Version>1.0.0.qualifier</Bundle-Version>
						<Bundle-ManifestVersion>2</Bundle-ManifestVersion>
						<Bundle-ClassPath>.,{maven-dependencies}</Bundle-ClassPath>
						<Embed-Directory>WEB-INF/lib</Embed-Directory>
						<Embed-Dependency>*;scope=compile|runtime</Embed-Dependency>
						<Embed-Transitive>true</Embed-Transitive>
						<Web-ContextPath>${bundle.webcontext}</Web-ContextPath>
						<!-- this plugin automatically replaces full packages by scanning import statements in classes.
						However package configured in spring bean classes and not used as import within java classes needs to mention separately
						hence com.b2international.snowowl.api.impl etc -->
						<Import-Package>*;resolution:=optional,
							com.b2international.snowowl.api.impl,
							com.b2international.snowowl.internal.eventbus,
							com.b2international.snowowl.snomed.api.impl.validation,
							com.b2international.snowowl.api.impl.codesystem
						</Import-Package>
					</instructions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/classes/WEB-INF/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<excludeScope>provided</excludeScope>
						</configuration>
					</execution>
					<execution>
						<id>unpack-crowd-resources</id>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<outputDirectory>${project.build.directory}/generated-resources</outputDirectory>
							<includeGroupIds>org.ihtsdo.otf</includeGroupIds>
							<includeArtifactIds>ihtsdo-crowd-resources</includeArtifactIds>
							<excludeArtifactIds>*</excludeArtifactIds>
							<excludeTransitive>true</excludeTransitive>
							<includes>crowd*.properties,
								application-im-common-security-config.xml,
								applicationContext-CrowdClient.xml,
								crowd-ehcache.xml
							</includes>
						</configuration>
					</execution>
					<execution>
						<id>unpack-swagger-ui-files</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.webjars</groupId>
									<artifactId>swagger-ui</artifactId>
									<version>2.1.8-M1</version>
									<outputDirectory>${project.build.directory}/generated-resources/swagger-extract</outputDirectory>
								</artifactItem>
							</artifactItems>
							<excludes>**/index.html</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>move-swagger-resources</id>
						<phase>generate-resources</phase>
						<configuration>
							<target>
								<move file="target/generated-resources/swagger-extract/META-INF/resources/webjars/swagger-ui/2.1.8-M1" tofile="target/generated-resources/swagger" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>delete-old-swagger-dir</id>
						<phase>generate-resources</phase>
						<configuration>
							<target>
								<delete dir="target/generated-resources/swagger-extract" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!--profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>generate-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<delete file="${project.build.directory}/generated-resources/crowd.properties" />
										<copy file="${project.build.directory}/generated-resources/crowd-dev.properties" tofile="${project.build.directory}/generated-resources/crowd.properties" />
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>prod</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>generate-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<delete file="${project.build.directory}/generated-resources/crowd.properties" />
										<copy file="${project.build.directory}/generated-resources/crowd-prod.properties" tofile="${project.build.directory}/generated-resources/crowd.properties" />
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>uat</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>generate-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<delete file="${project.build.directory}/generated-resources/crowd.properties" />
										<copy file="${project.build.directory}/generated-resources/crowd-uat.properties" tofile="${project.build.directory}/generated-resources/crowd.properties" />
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles-->
</project>
